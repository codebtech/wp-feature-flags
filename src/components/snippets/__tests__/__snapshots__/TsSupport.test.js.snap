// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Typescript snippet component renders without any error 1`] = `
<DocumentFragment>
  <div
    class="codeb-feature-flags-ts-snippet-container"
  >
    <h3>
      TypeScript support
    </h3>
    <p>
      Create a file named 
      <span
        class="codeb-feature-flags-filename"
      >
        flags.d.ts
      </span>
       at the entrypoint of TypeScript code for the plugin/theme ( usually
      <span
        class="codeb-feature-flags-slug"
      >
         src
      </span>
       directory ) and add the following declaration.
    </p>
    <button
      aria-label="Copy to clipboard"
      aria-pressed="false"
      class="components-button codeb-feature-flags-clipboard-base is-tertiary has-icon"
      type="button"
    >
      <span
        class="dashicon dashicons dashicons-clipboard"
      />
    </button>
    <pre
      style="display: block; overflow-x: auto; background: rgb(43, 43, 43); color: rgb(248, 248, 242); padding: 0.5em;"
    >
      <code
        class="language-typescript"
        style="white-space: pre;"
      >
        <span
          style="color: rgb(220, 198, 224);"
        >
          declare
        </span>
        <span>
           
        </span>
        <span
          style="color: rgb(220, 198, 224);"
        >
          namespace
        </span>
        <span>
           codebFeatureFlags {

        </span>
        <span>
          	
        </span>
        <span
          style="color: rgb(220, 198, 224);"
        >
          export
        </span>
        <span>
           
        </span>
        <span
          style="color: rgb(220, 198, 224);"
        >
          interface
        </span>
        <span>
           FeatureFlagProps {

        </span>
        <span>
                  
        </span>
        <span
          class="hljs-attr"
        >
          isEnabled
        </span>
        <span>
          : 
        </span>
        <span
          class="hljs-function"
        >
          (
        </span>
        <span
          class="hljs-function"
          style="color: rgb(245, 171, 53);"
        >
          flag: 
        </span>
        <span
          class="hljs-function"
          style="color: rgb(245, 171, 53);"
        >
          string
        </span>
        <span
          class="hljs-function"
        >
          ) =&gt;
        </span>
        <span>
           
        </span>
        <span
          style="color: rgb(245, 171, 53);"
        >
          boolean
        </span>
        <span>
          ;

        </span>
            }
}

        <span />
        <span
          style="color: rgb(220, 198, 224);"
        >
          declare
        </span>
        <span>
           
        </span>
        <span
          style="color: rgb(245, 171, 53);"
        >
          global
        </span>
        <span>
           {

        </span>
        <span>
              
        </span>
        <span
          style="color: rgb(220, 198, 224);"
        >
          interface
        </span>
        <span>
           Window {

        </span>
        <span>
                  
        </span>
        <span
          class="hljs-attr"
        >
          codebFeatureFlags
        </span>
        <span>
          : codebFeatureFlags.FeatureFlagProps;

        </span>
            }
}

        <span />
        <span
          style="color: rgb(220, 198, 224);"
        >
          export
        </span>
        <span>
           {};
        </span>
      </code>
    </pre>
  </div>
</DocumentFragment>
`;
